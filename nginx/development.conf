events {
}
http {
    server {
        listen 80;
        listen [::]:80;
        server_name app.localhost;
        set $app_target "http://app:8000";

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            resolver 127.0.0.11; # docker dns
            proxy_pass $app_target;
        }
    }
    server {
        listen 80;
        listen [::]:80;
        server_name minio.localhost;
        set $minio_target "http://minio:9000";
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            resolver 127.0.0.11; # docker dns
            proxy_pass $minio_target;
        }
    }
    server {
        listen 80;
        listen [::]:80;
        server_name langfuse.localhost;
        set $langfuse_target "http://langfuse:3000";
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            resolver 127.0.0.11; # docker dns
            proxy_pass $langfuse_target;
        }
    }
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    server {
        listen 80 default_server;
        server_name not_found;
        return 404;
    }
}