# Generated by Django 5.2.1 on 2025-05-19 19:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("webapp", "0014_attribute_section"),
    ]

    operations = [
        migrations.AddField(
            model_name="attribute",
            name="accepts_contributions",
            field=models.BooleanField(
                default=True,
                help_text="Whether this attribute accepts contributions from users, or is fixed",
            ),
        ),
        migrations.AddField(
            model_name="attribute",
            name="data_type",
            field=models.CharField(
                choices=[
                    ("string", "String"),
                    ("float", "Float"),
                    ("integer", "Integer"),
                ],
                default="string",
                help_text="Type of data to cast the attribute value to",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="Moderation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The primary key of the existing object being moderated (if updating)",
                        null=True,
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        help_text="The JSON data of the proposed changes or new object"
                    ),
                ),
                (
                    "triggered_by_object_id",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The primary key of the object that triggered this moderation",
                        null=True,
                    ),
                ),
                (
                    "request_note",
                    models.TextField(
                        blank=True,
                        help_text="Optional note explaining the suggested change",
                        null=True,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("unmoderated", "Unmoderated"),
                            ("approved", "Approved"),
                            ("declined", "Declined"),
                            ("modified", "Modified"),
                        ],
                        default="unmoderated",
                        help_text="The current state of this moderation",
                        max_length=20,
                    ),
                ),
                (
                    "verb",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("update", "Update"),
                            ("delete", "Delete"),
                        ],
                        default="create",
                        help_text="What type of action is being moderation",
                        max_length=20,
                    ),
                ),
                (
                    "response_note",
                    models.TextField(
                        blank=True,
                        help_text="Optional response note from the moderator",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="The type of model being moderated",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "moderator",
                    models.ForeignKey(
                        blank=True,
                        help_text="The moderator who handled this moderation (if assigned)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="handled_moderations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who requested this moderation",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requested_moderations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "triggered_by_content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="The type of object that triggered this moderation as a side effect",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="triggered_moderations",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name": "moderation",
                "verbose_name_plural": "moderations",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="webapp_mode_content_388c8f_idx",
                    ),
                    models.Index(fields=["state"], name="webapp_mode_state_b78549_idx"),
                    models.Index(
                        fields=["requested_by"], name="webapp_mode_request_3bac1e_idx"
                    ),
                    models.Index(
                        fields=["moderator"], name="webapp_mode_moderat_b3656d_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="webapp_mode_created_7c8c61_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="VesselAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="webapp.attribute",
                    ),
                ),
                (
                    "vessel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="webapp.vessel"
                    ),
                ),
            ],
            options={
                "verbose_name": "vessel attribute",
                "verbose_name_plural": "vessel attributes",
                "indexes": [
                    models.Index(
                        fields=["vessel", "attribute"],
                        name="webapp_vess_vessel__1eee65_idx",
                    )
                ],
                "unique_together": {("vessel", "attribute")},
            },
        ),
    ]
